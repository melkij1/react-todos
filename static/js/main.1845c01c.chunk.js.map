{"version":3,"sources":["components/app-header/app-header.js","components/search-panel/search-panel.js","components/post-status-filter/post-status-filter.js","components/post-list-item/post-list-item.js","components/post-list/post-list.js","components/post-add-form/post-add-form.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","liked","allPosts","className","SearchPanel","props","state","term","onUpdateSearch","bind","e","target","value","this","setState","type","placeholder","onChange","Component","PostStatusFilter","buttons","name","label","map","filter","onFilterSelect","classNames","onClick","PostListItem","onDelete","onToggleImportant","onToggleLike","important","like","PostList","posts","ListGroup","post","obj","key","isEmpty","id","PostAddForm","text","onValueChange","onSubmit","preventDefault","onAdd","App","data","maxId","length","deleteItem","addItem","index","findIndex","elem","slice","body","newItem","old","items","item","indexOf","visiblePosts","filterPost","searchPost","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1845c01c.chunk.js","sourcesContent":["import React from 'react'\n\nconst AppHeader = ({liked, allPosts}) => {\n  return (\n    <div className=\"app-header d-flex\">\n      <h1>Михаил Собакин</h1>\n      <h2>{allPosts} записей, из них понравилось {liked}</h2>\n    </div>\n  )\n}\n\nexport default AppHeader;","import React, {Component} from 'react'\n\nexport default  class SearchPanel extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      term: ''\n    }\n    this.onUpdateSearch = this.onUpdateSearch.bind(this);\n  }\n\n  onUpdateSearch(e){\n    const term = e.target.value;\n    this.setState({term});\n    this.props.onUpdateSearch(term);\n  }\n\n  render() {\n    return (\n      <input\n        className=\"form-control search-input\"\n        type=\"text\"\n        placeholder=\"Поиск по записям\"\n        onChange={this.onUpdateSearch}\n      />\n    )\n  }\n}\n\n","import React, {Component} from 'react'\n\nexport default class PostStatusFilter extends Component{\n  constructor(props){\n    super(props);\n    this.buttons = [\n      {name: 'all', label: 'Все'},\n      {name: 'like', label: 'Понравилось'},\n    ]\n  }\n  render() {\n\n    const buttons = this.buttons.map(({name,label}) => {\n      const {filter, onFilterSelect} = this.props\n      const active = filter === name;\n      const classNames = active ? 'btn-info' : 'btn-outline-secondary'\n      return (\n        <button \n          className={`btn ${classNames}`} \n          type=\"button\" \n          key={name} \n          onClick={() => onFilterSelect(name)}>{label}</button>\n      )\n    });\n\n    return (\n      <div className=\"btn-group\">\n        {buttons}\n      </div>\n    )\n  }\n}\n\n\n","import React, {Component} from 'react'\n\nexport default class PostListItem extends Component {\n  \n  render() {\n    const {label, onDelete, onToggleImportant, onToggleLike, important, like} = this.props;\n    let classNames = 'list-group-item app-list-item d-flex justify-content-between'\n    if(important){\n      classNames += ' important';\n    }\n    if(like){\n      classNames += ' like';\n    }\n    return (\n      <li className={classNames}>\n        <span className=\"app-list-item-label\" onClick={onToggleLike}>\n          {label}\n        </span>\n        <div className=\"d-flex justify-content-center align-items-center\">\n          <button \n            className=\"btn-star btn-sm\" \n            type=\"button\"\n            onClick={onToggleImportant}>\n            <i className=\"fa fa-star\"></i>\n          </button>\n          <button \n            className=\"btn-trash btn-sm\" \n            type=\"button\"\n            onClick={onDelete}>\n            <i className=\"fa fa-trash-o\"></i>\n          </button>\n          <i className=\"fa fa-heart\"></i>\n        </div>\n      </li>\n    )\n  }\n}\n","import React from 'react'\nimport { ListGroup } from 'reactstrap';\nimport PostListItem from '../post-list-item/post-list-item'\n\n\n\nconst PostList = ({posts, onDelete, onToggleImportant, onToggleLike}) => {\n  function isEmpty(obj) {\n      for(let key in obj)\n      {\n          return true;\n      }\n      return false;\n  }\n\n  return (\n    <ListGroup className=\"app-list\">\n      {posts && posts.map((post) => {\n        if(typeof post === 'object' && isEmpty(post)){\n          return <PostListItem \n            key={post.id} \n            {...post} onDelete={() => onDelete(post.id)}\n            onToggleImportant={() => onToggleImportant(post.id)}\n            onToggleLike={() => onToggleLike(post.id)}/>\n        }else {\n          return false\n        }\n      }\n        // <PostListItem key={i} {...post}/>\n      )}\n    </ListGroup>\n  )\n}\n\nexport default PostList\n","import React, {Component} from 'react'\n\nexport default class PostAddForm extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      text: ''\n    }\n    this.onValueChange = this.onValueChange.bind(this)\n    this.onSubmit = this.onSubmit.bind(this)\n  }\n\n  onValueChange(e) {\n    this.setState({\n      text: e.target.value\n    })\n  }\n\n  onSubmit(e){\n    e.preventDefault();\n    if(this.state.text !== ''){\n      this.props.onAdd(this.state.text)\n      this.setState({\n        text: ''\n      })\n    }\n  }\n  render() {\n    return (\n      <form \n        onSubmit={this.onSubmit}\n        className=\"bottom-panel d-flex\">\n        <input\n          type=\"text\"\n          placeholder=\"О чем вы думаете сейчас?\"\n          className=\"form-control new-post-label\"\n          value={this.state.text}\n          onChange={this.onValueChange}\n        />\n        <button \n          type=\"submit\" \n          className=\"btn btn-outline-secondary\">Добавить</button>\n      </form>\n    )\n  }\n}\n\n","import App from './app';\nexport default App;","import React, {Component} from 'react';\nimport AppHeader from '../app-header/app-header';\nimport SearchPanel from '../search-panel/search-panel';\nimport PostStatusFilter from '../post-status-filter/post-status-filter'\nimport PostList from '../post-list/post-list'\nimport PostAddForm from '../post-add-form/post-add-form';\n\n\nexport default class App extends Component {\n  \n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [\n        {label: 'Goind to lealrn React', important: true, like: false, id: 1},\n        {label: 'That is so good', important: false, like: false, id: 2},\n        {label: 'I need a break...', important: false, like: false, id: 3},\n      ],\n      term: '',\n      filter: 'all',\n    };\n    this.maxId = this.state.data.length + 1;\n    this.deleteItem = this.deleteItem.bind(this);\n    this.addItem = this.addItem.bind(this);\n    this.onToggleImportant = this.onToggleImportant.bind(this);\n    this.onToggleLike = this.onToggleLike.bind(this);\n    this.onUpdateSearch = this.onUpdateSearch.bind(this);\n    this.onFilterSelect = this.onFilterSelect.bind(this);\n  }\n\n  deleteItem(id){\n    this.setState(({data}) => {\n      const index = data.findIndex(elem => elem.id === id);\n    \n      const newArr = [...data.slice(0, index), ...data.slice(index + 1)];\n\n      return {\n        data: newArr\n      }\n\n    })\n  }\n  addItem(body) {\n    const newItem = {\n      label: body,\n      important: false,\n      id: this.maxId++\n    }\n    this.setState(({data}) => {\n      const newArr = [...data, newItem];\n      return {\n        data: newArr\n      }\n    })\n  }\n  onToggleImportant(id){\n    this.setState(({data}) => {\n      const index = data.findIndex(elem => elem.id === id);\n\n      const old = data[index]\n      const newItem = {...old, important: !old.important}\n\n      const newArr = [...data.slice(0, index),newItem, ...data.slice(index + 1)];\n      return {\n        data: newArr\n      }\n    })\n  }\n  onToggleLike(id){\n    this.setState(({data}) => {\n      const index = data.findIndex(elem => elem.id === id);\n\n      const old = data[index]\n      const newItem = {...old, like: !old.like}\n\n      const newArr = [...data.slice(0, index),newItem, ...data.slice(index + 1)];\n      return {\n        data: newArr\n      }\n    })\n  }\n  searchPost(items, term) {\n    if(term.length === 0) {\n      return items\n    }\n\n    return items.filter((item) => {\n      return item.label.indexOf(term) > -1\n    });\n\n\n  }\n  filterPost(items, filter){\n   if(filter === 'like') {\n     return items.filter(item => item.like )\n   }else {\n     return items\n   }\n  }\n  onUpdateSearch(term) {\n    this.setState({term});\n  }\n\n  onFilterSelect(filter){\n    this.setState({filter});\n  }\n  \n\n\n  render() {\n    const {data, term, filter} = this.state;\n    const liked =  data.filter(item => item.like === true).length;\n    const allPosts = data.length\n\n    const visiblePosts = this.filterPost(this.searchPost(data, term), filter);\n\n    return (\n      <div className=\"app\">\n        <AppHeader \n          liked={liked}\n          allPosts={allPosts}\n        />\n        <div className=\"search-panel d-flex\">\n          <SearchPanel \n            onUpdateSearch={this.onUpdateSearch}\n          />\n          <PostStatusFilter \n            filter={filter}\n            onFilterSelect={this.onFilterSelect}\n          />\n        </div>\n        <PostList \n          posts={visiblePosts}\n          onDelete={this.deleteItem}\n          onToggleImportant={this.onToggleImportant}\n          onToggleLike={this.onToggleLike}\n        />\n        <PostAddForm \n          onAdd={this.addItem}\n        />\n      </div>\n    )\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\n// import './index.css';\nimport './styles/app.scss';\nimport App from './components/app/';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}